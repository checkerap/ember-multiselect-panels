define("dummy/app",["ember","ember/resolver","ember/load-initializers","dummy/config/environment","exports"],function(e,t,a,s,n){"use strict";var r=e["default"],l=t["default"],i=a["default"],o=s["default"];r.MODEL_FACTORY_INJECTIONS=!0;var u=r.Application.extend({modulePrefix:o.modulePrefix,podModulePrefix:o.podModulePrefix,Resolver:l});i(u,o.modulePrefix),n["default"]=u}),define("dummy/components/multiselect-panels",["ember","ember-cli-multiselect-panels/components/multiselect-panels","exports"],function(e,t,a){"use strict";var s=(e["default"],t["default"]);a["default"]=s}),define("dummy/controllers/index",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Controller.extend({myList:function(){return[a.Object.create({name:"The Boondock Saints"}),a.Object.create({name:"Shaun of the Dead"}),a.Object.create({name:"Seven"}),a.Object.create({name:"Boyz in the Hood"}),a.Object.create({name:"Saw"}),a.Object.create({name:"Hot Fuzz"}),a.Object.create({name:"The Matrix"}),a.Object.create({name:"Resident Evil"})]}.property(),myPromiseList:function(){var e=[a.Object.create({name:"Tyrion Lannister"}),a.Object.create({name:"Ned Stark"}),a.Object.create({name:"Cersei Lannister"}),a.Object.create({name:"Brandon Stark"}),a.Object.create({name:"Daenerys Targaryen"}),a.Object.create({name:"Kal Drogo"}),a.Object.create({name:"Jon Snow"})];return new a.RSVP.Promise(function(t){a.run.later(function(){t(e)},2e3)})}.property(),favouriteMovies:[],favouriteCharacters:[]})}),define("dummy/initializers/export-application-global",["ember","dummy/config/environment","exports"],function(e,t,a){"use strict";function s(e,t){var a=n.String.classify(r.modulePrefix);r.exportApplicationGlobal&&(window[a]=t)}var n=e["default"],r=t["default"];a.initialize=s,a["default"]={name:"export-application-global",initialize:s}}),define("dummy/router",["ember","dummy/config/environment","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"],r=s.Router.extend({location:n.locationType});r.map(function(){}),a["default"]=r}),define("dummy/templates/application",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var l,i="";return r.buffer.push("<div id=\"container\">\n\n  <h1 id='title'>Ember Two Panels Multiselect</h1>\n\n  "),l=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(l||0===l)&&r.buffer.push(l),r.buffer.push("\n\n</div>\n"),i})}),define("dummy/templates/components/multiselect-panels",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function l(e,t){var a,n="";return t.buffer.push("\n				<a "),t.buffer.push(c(s.action.call(e,"addItem","item",{hash:{on:"click"},hashTypes:{on:"STRING"},hashContexts:{on:e},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(' class="multiselect-panels-item">'),a=s._triageMustache.call(e,"item.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</a>\n			"),n}function i(e,t){var a,n="";return t.buffer.push("\n				<a "),t.buffer.push(c(s.action.call(e,"removeItem","item",{hash:{on:"click"},hashTypes:{on:"STRING"},hashContexts:{on:e},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(' class="multiselect-panels-item">'),a=s._triageMustache.call(e,"item.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</a>\n			"),n}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var o,u="",c=this.escapeExpression,h=this;return r.buffer.push('<div class="multiselect-panels clearfix">\n	<label>'),o=s._triageMustache.call(t,"label",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push('</label>\n\n	<div class="tip">Click on each item to select</div>\n\n	<div class="multiselect-panels-column">\n		<a '),r.buffer.push(c(s.action.call(t,"selectAll",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r}))),r.buffer.push(' class="multiselect-panels-button">Select All</a>\n		<div class="multiselect-panels-options">\n			'),o=s.each.call(t,"item","in","sortedContent",{hash:{},hashTypes:{},hashContexts:{},inverse:h.noop,fn:h.program(1,l,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push('\n		</div>\n	</div>\n\n	<div class="multiselect-panels-column">\n		<a '),r.buffer.push(c(s.action.call(t,"unselectAll",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r}))),r.buffer.push(' class="multiselect-panels-button">Deselect All</a>\n		<div class="multiselect-panels-options">\n			'),o=s.each.call(t,"item","in","selected",{hash:{},hashTypes:{},hashContexts:{},inverse:h.noop,fn:h.program(3,i,r),contexts:[t,t,t],types:["ID","ID","ID"],data:r}),(o||0===o)&&r.buffer.push(o),r.buffer.push("\n		</div>\n	</div>\n\n</div>\n"),u})}),define("dummy/templates/index",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function l(e,t){var a,n="";return t.buffer.push("\n    <li>"),a=s._triageMustache.call(e,"name",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</li>\n  "),n}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,o,u,c="",h=s.helperMissing,p=this.escapeExpression,f=this;return r.buffer.push("<h2>Static multiselect</h2>\n"),r.buffer.push(p((o=s["multiselect-panels"]||t&&t["multiselect-panels"],u={hash:{content:"myList",label:"Movies",selected:"favouriteMovies",sortProperty:"name"},hashTypes:{content:"ID",label:"STRING",selected:"ID",sortProperty:"STRING"},hashContexts:{content:t,label:t,selected:t,sortProperty:t},contexts:[],types:[],data:r},o?o.call(t,u):h.call(t,"multiselect-panels",u)))),r.buffer.push("\n\n<div>\n  <strong>Favourite Movies</strong>\n  <ul>\n  "),i=s.each.call(t,"favouriteMovies",{hash:{},hashTypes:{},hashContexts:{},inverse:f.noop,fn:f.program(1,l,r),contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n  </ul>\n</div>\n\n<h2>Promise multiselect</h2>\n"),r.buffer.push(p((o=s["multiselect-panels"]||t&&t["multiselect-panels"],u={hash:{content:"myPromiseList",label:"Characters",selected:"favouriteCharacters",sortProperty:"name"},hashTypes:{content:"ID",label:"STRING",selected:"ID",sortProperty:"STRING"},hashContexts:{content:t,label:t,selected:t,sortProperty:t},contexts:[],types:[],data:r},o?o.call(t,u):h.call(t,"multiselect-panels",u)))),r.buffer.push("\n\n<div>\n  <strong>Favourite Characters</strong>\n  <ul>\n  "),i=s.each.call(t,"favouriteCharacters",{hash:{},hashTypes:{},hashContexts:{},inverse:f.noop,fn:f.program(1,l,r),contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n  </ul>\n</div>\n"),c})}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var a=t+"/config/environment",s=e["default"].$('meta[name="'+a+'"]').attr("content"),n=JSON.parse(unescape(s));return{"default":n}}catch(r){throw new Error('Could not read config from meta tag with name "'+a+'".')}}),runningTests?require("dummy/tests/test-helper"):require("dummy/app")["default"].create({});